{"conclusion":"Conclusion","conclusionData":"Ce projet met non seulement en valeur mes compétences techniques dans l'utilisation de frameworks et de bibliothèques de développement Web modernes, mais souligne également ma capacité à créer une application conviviale et accessible. La combinaison de composants stylisés, de gestion du contexte et d'internationalisation avec Next.js démontre mon engagement à créer des applications Web robustes et maintenables.\n\n\n\n\n\n\n","featureData":"Next.js Server Components : J'ai utilisé les composants du serveur Next.js pour une récupération efficace des données. Cette fonctionnalité optimise le processus de rendu en permettant de récupérer les données côté serveur avant de les envoyer au client. Next.js Client Components : Pour afficher les données, j'ai utilisé les composants clients Next.js. Cette approche permet une expérience utilisateur plus interactive, car les composants clients peuvent répondre aux interactions des utilisateurs sans nécessiter un rechargement complet de la page. Next.js App Router : Le routeur d'application a été utilisé pour gérer la navigation au sein de l'application, offrant une expérience simplifiée aux utilisateurs lorsqu'ils se déplacent entre différentes pages. Next.js API Routes : J'ai implémenté une API factice à l'aide des routes API Next.js pour gérer les requêtes GET. Cette fonctionnalité permet une récupération facile des données et sert de backend fictif pour l'application. Next.js Middleware pour i18next : J'ai intégré un middleware pour i18next, permettant une détection et une gestion fluides de la langue lorsque les utilisateurs naviguent dans l'application. Configuration Next.js pour les images externes : pour améliorer l'expérience utilisateur avec les images, j'ai configuré Next.js pour autoriser l'utilisation d'images externes, permettant de meilleures performances et une optimisation des images.\n\n","features":"Fonctionnalités implémentées avec Next.js","overview":"Aperçu du projet","overviewData":"Pour ma récente mission, j'ai développé une application Web utilisant une pile technologique moderne pour démontrer mes compétences et ma compréhension des technologies clés. Vous trouverez ci-dessous un aperçu détaillé des fonctionnalités et des technologies que j'ai mises en œuvre dans le projet.","technologiesUsed\n":"Technologies utilisées","techStack":"Composants stylisés : j'ai exploité des composants stylisés pour créer plusieurs composants réutilisables qui améliorent la maintenabilité et l'évolutivité globales de l'application. Cette approche m'a permis d'encapsuler des styles dans des composants, garantissant ainsi une conception cohérente dans toute l'application. API de contexte : pour implémenter une fonctionnalité de basculement de thème (mode sombre et clair), j'ai utilisé l'API de contexte. Cette décision a été prise pour remplacer toutes les solutions de gestion d'état globales, offrant un moyen transparent de gérer et de partager l'état du thème dans l'ensemble de l'application sans nécessiter de bibliothèque de gestion d'état dédiée. i18next et i18nexus : pour l'internationalisation, j'ai utilisé i18next pour gérer les traductions et i18nexus pour la recherche et la traduction dynamiques des langues. Cette combinaison permet à l'application de prendre en charge plusieurs langues, garantissant une portée et une accessibilité plus larges pour les utilisateurs de différentes régions.\n\n"}